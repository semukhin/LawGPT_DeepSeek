/**
 * LawGPT - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏
 * @version 2.0.0
 * @date 2024-03-14
 */

console.log('LawGPT Frontend –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const config = {
    apiUrl: '/api',
    apiTimeout: 60000,
    storageTokenKey: 'lawgpt_token',
    storageThreadKey: 'lawgpt_thread_id',
    storageTempTokenKey: 'lawgpt_temp_token',
    markdownEnabled: true,
    autoscrollEnabled: true,
    maxFileSize: 50 * 1024 * 1024,
    mobileBreakpoint: 768 // –¢–æ—á–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
};

// ============================================================
// –ú–æ–±–∏–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
// ============================================================

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
 * @returns {boolean} 
 */
function isMobile() {
    return window.innerWidth <= config.mobileBreakpoint;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @returns {boolean}
 */
function isLowPowerDevice() {
    return (
        (navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4) ||
        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
        (navigator.deviceMemory && navigator.deviceMemory < 2)
    );
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–∞–π–ø-–∂–µ—Å—Ç–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
function initSwipeGestures() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ - –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–∞–π–ø-–∂–µ—Å—Ç–æ–≤');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è pull-to-refresh –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
 */
function initPullToRefresh() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ - –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è pull-to-refresh');
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
function initKeyboardOptimization() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ - –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
function initLazyMessageLoading() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ - –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π');
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
function optimizeForLowPowerDevices() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ - –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
    console.log('–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
 */
function initMobileMenu() {
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.getElementById('sidebar-overlay');
    const header = document.querySelector('.header');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ sidebar –∏ overlay
    if (!sidebar || !overlay) {
        console.error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã sidebar –∏–ª–∏ overlay –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    let menuToggle = document.getElementById('menu-toggle');
    
    // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ—ë
    if (!menuToggle) {
        console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é');
        menuToggle = document.createElement('button');
        menuToggle.id = 'menu-toggle';
        menuToggle.className = 'menu-toggle';
        menuToggle.innerHTML = `
            <span class="burger-line"></span>
            <span class="burger-line"></span>
            <span class="burger-line"></span>
        `;
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞—á–∞–ª–æ header
        header.insertBefore(menuToggle, header.firstChild);
    }
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    const newMenuToggle = menuToggle.cloneNode(true);
    if (menuToggle.parentNode) {
        menuToggle.parentNode.replaceChild(newMenuToggle, menuToggle);
    }
    menuToggle = newMenuToggle;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    menuToggle.addEventListener('click', function() {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –º–µ–Ω—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
        sidebar.classList.toggle('active');
        overlay.classList.toggle('active');
        menuToggle.classList.toggle('active');
        document.body.style.overflow = sidebar.classList.contains('active') ? 'hidden' : '';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
    overlay.addEventListener('click', function() {
        console.log('–ö–ª–∏–∫ –ø–æ –æ–≤–µ—Ä–ª–µ—é');
        sidebar.classList.remove('active');
        overlay.classList.remove('active');
        menuToggle.classList.remove('active');
        document.body.style.overflow = '';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —á–∞—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    document.addEventListener('click', function(e) {
        const chatItem = e.target.closest('.chat-item');
        if (chatItem && window.innerWidth <= 768) {
            sidebar.classList.remove('active');
            overlay.classList.remove('active');
            menuToggle.classList.remove('active');
            document.body.style.overflow = '';
        }
    });
    
    console.log('–ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
function initMobileEnhancements() {
    if (isMobile()) {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π');
        
        initSwipeGestures();
        initPullToRefresh();
        initKeyboardOptimization();
        initLazyMessageLoading();
        
        if (isLowPowerDevice()) {
            console.log('‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
            optimizeForLowPowerDevices();
        }
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 */
function showApp() {
    toggleAppVisibility(true);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
function showAuth() {
    toggleAppVisibility(false);
    showAuthScreen('login-screen');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @param {string} screenId - ID —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞
 */
function showAuthScreen(screenId) {
    const screens = [
        'login-screen',
        'register-screen',
        'verify-screen',
        'forgot-password-screen',
        'reset-password-screen'
    ];
    
    screens.forEach(id => {
        const screen = document.getElementById(id);
        if (screen) {
            if (id === screenId) {
                screen.style.display = 'block';
            } else {
                screen.style.display = 'none';
            }
        }
    });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 * @param {string} message - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ('success', 'error', 'info')
 */
function showNotification(message, type = 'info') {
    const notification = document.getElementById('notification');
    notification.textContent = message;
    notification.className = `notification ${type}`;
    notification.style.display = 'block';
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.style.display = 'none';
    }, 3000);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
 */
function showLoading() {
    document.getElementById('loading-overlay').style.display = 'flex';
}

/**
 * –°–∫—Ä—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
 */
function hideLoading() {
    document.getElementById('loading-overlay').style.display = 'none';
}

// ============================================================
// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
// ============================================================

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API
 * @param {string} endpoint - –ü—É—Ç—å API –±–µ–∑ –±–∞–∑–æ–≤–æ–≥–æ URL
 * @param {string} method - HTTP –º–µ—Ç–æ–¥ (GET, POST, PUT, DELETE)
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–¥–ª—è POST, PUT)
 * @param {string} token - JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Promise<Object>} - Promise —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç API
 */
async function apiRequest(endpoint, method, data = null, token = null) {
    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –∏–∑ localStorage
    if (!token) {
        token = localStorage.getItem(config.storageTokenKey);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    const headers = {
        'Content-Type': 'application/json'
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω
    if (token) {
        headers['Authorization'] = `Bearer ${token}`;
    }
    
    // –û–ø—Ü–∏–∏ –¥–ª—è fetch
    const options = {
        method: method,
        headers: headers,
        timeout: config.apiTimeout
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç
    if (data && ['POST', 'PUT', 'PATCH'].includes(method)) {
        options.body = JSON.stringify(data);
    }
    
    try {
        const response = await fetch(`${config.apiUrl}${endpoint}`, options);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ HTTP
        if (!response.ok) {
            let errorText = `HTTP –æ—à–∏–±–∫–∞ ${response.status}`;
            
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∏–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
            try {
                const errorData = await response.json();
                if (errorData.detail) {
                    errorText = errorData.detail;
                }
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON
            }
            
            throw new Error(errorText);
        }
        
        // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –∫–∞–∫ JSON
        const data = await response.json();
        return data;
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞ –∫ ${endpoint}:`, error);
        throw error;
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Å FormData (–¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤)
 * @param {string} endpoint - –ü—É—Ç—å API –±–µ–∑ –±–∞–∑–æ–≤–æ–≥–æ URL
 * @param {FormData} formData - FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise<Object>} - Promise —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç API
 */
async function apiRequestFormData(endpoint, formData) {
    const token = localStorage.getItem(config.storageTokenKey);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ (–±–µ–∑ Content-Type, –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è FormData)
    const headers = {};
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω
    if (token) {
        headers['Authorization'] = `Bearer ${token}`;
    }
    
    try {
        const response = await fetch(`${config.apiUrl}${endpoint}`, {
            method: 'POST',
            headers: headers,
            body: formData,
            timeout: config.apiTimeout
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ HTTP
        if (!response.ok) {
            let errorText = `HTTP –æ—à–∏–±–∫–∞ ${response.status}`;
            
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∏–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
            try {
                const errorData = await response.json();
                if (errorData.detail) {
                    errorText = errorData.detail;
                }
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON
            }
            
            throw new Error(errorText);
        }
        
        // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –∫–∞–∫ JSON
        const data = await response.json();
        return data;
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞ FormData –∫ ${endpoint}:`, error);
        throw error;
    }
}

// ============================================================
// –§—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
// ============================================================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
async function handleLogin(e) {
    e.preventDefault();
    
    const email = document.getElementById('login-email').value;
    const password = document.getElementById('login-password').value;
    
    if (!email || !password) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    showLoading();
    
    try {
        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–µ UserLogin –≤ app/schemas.py
        const response = await apiRequest('/login', 'POST', {
            email: email,
            password: password
        });
        
        if (response.access_token) {
            localStorage.setItem(config.storageTokenKey, response.access_token);
            hideLoading();
            showApp();
            loadUserProfile();
            loadChatThreads();
            showNotification('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ', 'success');
        } else {
            hideLoading();
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
        }
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: ${error.message || '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
async function handleRegister(e) {
    e.preventDefault();
    
    const firstName = document.getElementById('register-firstname').value;
    const lastName = document.getElementById('register-lastname').value;
    const email = document.getElementById('register-email').value;
    const password = document.getElementById('register-password').value;
    
    if (!firstName || !lastName || !email || !password) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    showLoading();
    
    try {
        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç UserCreate —Å—Ö–µ–º–µ –≤ app/schemas.py
        const response = await apiRequest('/register', 'POST', {
            email: email,
            password: password,
            first_name: firstName,
            last_name: lastName
        });
        
        if (response.temp_token || response.message) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if (response.temp_token) {
                localStorage.setItem(config.storageTempTokenKey, response.temp_token);
            }
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º email –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞
            localStorage.setItem('temp_email', email);
            
            hideLoading();
            showAuthScreen('verify-screen');
            showNotification(response.message || '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à email', 'success');
        } else {
            hideLoading();
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
        }
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message || '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
async function handleVerify(e) {
    e.preventDefault();
    
    const code = document.getElementById('verify-code').value;
    const token = localStorage.getItem(config.storageTempTokenKey);
    
    if (!code) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è', 'error');
        return;
    }
    
    if (!token) {
        showNotification('–û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
        showAuthScreen('login-screen');
        return;
    }
    
    showLoading();
    
    try {
        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–µ VerifyRequest –≤ app/schemas.py
        const response = await apiRequest('/verify', 'POST', {
            code: parseInt(code)
        }, token);
        
        if (response.access_token) {
            localStorage.setItem(config.storageTokenKey, response.access_token);
            localStorage.removeItem(config.storageTempTokenKey);
            localStorage.removeItem('temp_email');
            hideLoading();
            showApp();
            loadUserProfile();
            loadChatThreads();
            showNotification('–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω', 'success');
        } else {
            hideLoading();
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
        }
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${error.message || '–Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥'}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 */
async function handleResendCode(e) {
    e.preventDefault();
    
    const email = localStorage.getItem('temp_email');
    
    if (!email) {
        showNotification('–û—à–∏–±–∫–∞: email –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
        showAuthScreen('login-screen');
        return;
    }
    
    showLoading();
    
    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ register –≤–º–µ—Å—Ç–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ resend-code
        const response = await apiRequest('/register', 'POST', {
            email: email,
            password: "temporary", // –≠—Ç–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            first_name: "–í—Ä–µ–º–µ–Ω–Ω–æ–µ",
            last_name: "–ò–º—è"
        });
        
        if (response.temp_token) {
            localStorage.setItem(config.storageTempTokenKey, response.temp_token);
        }
        
        hideLoading();
        showNotification('–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'success');
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: ${error.message}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
async function handleForgotPassword(e) {
    e.preventDefault();
    
    const email = document.getElementById('forgot-email').value;
    
    if (!email) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email', 'error');
        return;
    }
    
    showLoading();
    
    try {
        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–µ PasswordResetRequest –≤ app/schemas.py
        const response = await apiRequest('/forgot-password', 'POST', {
            email: email
        });
        
        localStorage.setItem('reset_email', email);
        hideLoading();
        showAuthScreen('reset-password-screen');
        
        // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω—è–µ–º email –≤ —Ñ–æ—Ä–º–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
        document.getElementById('reset-email').value = email;
        
        showNotification('–ö–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à email', 'success');
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: ${error.message}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
async function handleResetPassword(e) {
    e.preventDefault();
    
    const email = document.getElementById('reset-email').value;
    const code = document.getElementById('reset-code').value;
    const newPassword = document.getElementById('reset-password').value;
    
    if (!email || !code || !newPassword) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    showLoading();
    
    try {
        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–µ PasswordResetConfirm –≤ app/schemas.py
        const response = await apiRequest('/reset-password', 'POST', {
            email: email,
            code: parseInt(code),
            new_password: newPassword
        });
        
        hideLoading();
        showAuthScreen('login-screen');
        showNotification('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º', 'success');
    } catch (error) {
        hideLoading();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è: ${error.message}`, 'error');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleLogout() {
    showLoading();
    
    try {
        await apiRequest('/logout', 'POST');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
    } finally {
        localStorage.removeItem(config.storageTokenKey);
        localStorage.removeItem(config.storageThreadKey);
        hideLoading();
        showAuth();
        showNotification('–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ', 'success');
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
 * @param {string} token - JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {Promise<boolean>} - Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
async function validateToken(token) {
    try {
        const response = await apiRequest('/profile', 'GET', null, token);
        return !!response; // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç, –∑–Ω–∞—á–∏—Ç —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
        return false;
    }
}


// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Ñ–∏–ª—è
function showProfileModal() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    let modal = document.getElementById('profile-modal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'profile-modal';
        modal.className = 'modal';
        
        document.body.appendChild(modal);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
    apiRequest('/profile', 'GET')
        .then(data => {
            modal.innerHTML = `
                <div class="modal-content">
                    <span class="close-modal">&times;</span>
                    <h2>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
                    <div class="profile-info">
                        <div class="profile-row">
                            <span class="profile-label">–ò–º—è:</span>
                            <span class="profile-value">${data.first_name} ${data.last_name}</span>
                        </div>
                        <div class="profile-row">
                            <span class="profile-label">Email:</span>
                            <span class="profile-value">${data.email}</span>
                        </div>
                    </div>
                </div>
            `;
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
            modal.querySelector('.close-modal').addEventListener('click', () => {
                modal.style.display = 'none';
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal.style.display = 'block';
        })
        .catch(error => {
            showNotification(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${error.message}`, 'error');
        });
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ "–û –Ω–∞—Å"
function showAboutModal() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    let modal = document.getElementById('about-modal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'about-modal';
        modal.className = 'modal';
        
        document.body.appendChild(modal);
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>–û —Å–µ—Ä–≤–∏—Å–µ LawGPT</h2>
            <p>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–µ—Ä–≤–∏—Å–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ LawGPT!</p>
            <p>LawGPT ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ.</p>
            <p>–ù–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞  —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞—è—Å—å –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –±–∞–∑–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞
            <p>–∏ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏.</p>
            <p>–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤–µ—Ä–º—è —Å–µ—Ä–≤–∏—Å –∏–º–µ–µ—Ç RAG c –ø–æ—á—Ç–∏ –ø–æ–ª–Ω–æ–π –±–∞–∑–æ–π —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞.</p>
            <p>–ü–æ–ø–æ–ª—è–µ—Ç—Å—è –±–∞–∑–∞ —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ –æ–±–∑–æ—Ä–æ–≤ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏.</p>
            <p>–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–µ—Ä–≤–∏—Å–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—è —Å–≤–æ–∏ –∏–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è 
            <p>–Ω–∞ –ø–æ—á—Ç—É <a href="mailto:info@lawgpt.ru">info@lawgpt.ru</a>.</p>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ LawGPT!</p>
            
            <div class="social-links">
                <h3>–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</h3>
                <div class="social-buttons">
                    <a href="https://vk.com/lawgptru" target="_blank" rel="noopener" class="social-link">
                        <i class="fab fa-vk"></i> –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                    </a>
                    <a href="https://t.me/Law_GPT" target="_blank" rel="noopener" class="social-link">
                        <i class="fab fa-telegram"></i> Telegram
                    </a>
                </div>
            </div>
        </div>
    `;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    modal.querySelector('.close-modal').addEventListener('click', () => {
        modal.style.display = 'none';
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = 'block';
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Telegram –≤ —Ñ—É—Ç–µ—Ä
 */
function ensureTelegramLink() {
    try {
        const footerSocialLinks = document.querySelector('.footer .social-links');
        
        if (!footerSocialLinks) {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –≤ —Ñ—É—Ç–µ—Ä–µ');
            return;
        }
        
        const telegramLink = footerSocialLinks.querySelector('a[href*="t.me"], a[href*="telegram"]');
        
        if (!telegramLink) {
            const newTelegramLink = document.createElement('a');
            newTelegramLink.href = 'https://t.me/Law_GPT';
            newTelegramLink.target = '_blank';
            newTelegramLink.rel = 'noopener noreferrer';
            newTelegramLink.className = 'social-link';
            newTelegramLink.innerHTML = '<i class="fab fa-telegram"></i> Telegram';
            
            footerSocialLinks.appendChild(newTelegramLink);
            console.log('–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ñ—É—Ç–µ—Ä');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ Telegram:', error);
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
 */
function initSocialLinks() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É—Ç–µ—Ä –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫
    ensureTelegramLink();
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
    function updateSocialIcons() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Font Awesome
        if (typeof FontAwesome === 'undefined' && document.querySelector('[class*="fa-"]') === null) {
            // –ï—Å–ª–∏ Font Awesome –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            const fontAwesomeLink = document.createElement('link');
            fontAwesomeLink.rel = 'stylesheet';
            fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
            document.head.appendChild(fontAwesomeLink);
            console.log('Font Awesome –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –∏–∫–æ–Ω–æ–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π');
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        const socialLinks = document.querySelectorAll('.social-link');
        socialLinks.forEach(link => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Å—Å—ã–ª–∫–∏ –∏–∫–æ–Ω–∫–∞
            if (!link.querySelector('i[class*="fa-"]')) {
                // –ï—Å–ª–∏ –∏–∫–æ–Ω–∫–∏ –Ω–µ—Ç, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é –¥–æ–±–∞–≤–∏—Ç—å
                if (link.href && link.href.includes('vk.com')) {
                    link.innerHTML = '<i class="fab fa-vk"></i> ' + link.textContent;
                } else if (link.href && (link.href.includes('t.me') || link.href.includes('telegram'))) {
                    link.innerHTML = '<i class="fab fa-telegram"></i> ' + link.textContent;
                } else if (link.href && link.href.includes('whatsapp')) {
                    link.innerHTML = '<i class="fab fa-whatsapp"></i> ' + link.textContent;
                }
            }
        });
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫
    updateSocialIcons();
}

// ============================================================
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É—Ç–∏–ª–∏—Ç—ã
// ============================================================

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∏–ª–∏ —Ñ—É—Ç–µ—Ä–∞ –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function fixFooterStyles() {
    const footer = document.querySelector('.footer');
    if (footer) {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ—É—Ç–µ—Ä–∞
        footer.style.padding = '0.25rem';
        footer.style.paddingBottom = 'calc(0.25rem + env(safe-area-inset-bottom))';
        footer.style.minHeight = 'auto';
        footer.style.marginTop = 'auto';
        
        // –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        const footerDivs = footer.querySelectorAll('div');
        footerDivs.forEach(div => {
            div.style.margin = '0.05rem 0';
        });
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
function initApp() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const token = localStorage.getItem(config.storageTokenKey);
    
    if (token) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
        validateToken(token)
            .then(isValid => {
                if (isValid) {
                    showApp();
                    loadUserProfile();
                    loadChatThreads();
                    
                    // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–¥–∏–º –ø–µ—Ä–≤—ã–π —á–∞—Ç
                    setTimeout(() => {
                        const chatList = document.getElementById('chat-list');
                        if (chatList && chatList.children.length === 0) {
                            console.log('–°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                            createNewChat();
                        } else if (chatList && chatList.querySelector('.chat-item.empty')) {
                            console.log('–°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤)');
                            createNewChat();
                        }
                    }, 1000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã chatList —É—Å–ø–µ–ª –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
                } else {
                    showAuth();
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞:', error);
                showAuth();
            });
    } else {
        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        showAuth();
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    initEventListeners();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    initMobileMenu();
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª–µ–π —Ñ—É—Ç–µ—Ä–∞
    fixFooterStyles();
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function initEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    initAuthForms();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞
    initChatInterface();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
        logoutBtn.addEventListener('click', handleLogout);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏
    initAuthSwitchers();
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
function initAuthForms() {
    // –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
    const loginForm = document.getElementById('login-form');
    if (loginForm) {
        loginForm.addEventListener('submit', handleLogin);
    }
    
    // –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registerForm = document.getElementById('register-form');
    if (registerForm) {
        registerForm.addEventListener('submit', handleRegister);
    }
    
    // –§–æ—Ä–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const verifyForm = document.getElementById('verify-form');
    if (verifyForm) {
        verifyForm.addEventListener('submit', handleVerify);
    }
    
    // –§–æ—Ä–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
    const forgotPasswordForm = document.getElementById('forgot-password-form');
    if (forgotPasswordForm) {
        forgotPasswordForm.addEventListener('submit', handleForgotPassword);
    }
    
    // –§–æ—Ä–º–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    const resetPasswordForm = document.getElementById('reset-password-form');
    if (resetPasswordForm) {
        resetPasswordForm.addEventListener('submit', handleResetPassword);
    }
    
    // –ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞
    const resendCodeBtn = document.getElementById('resend-code');
    if (resendCodeBtn) {
        resendCodeBtn.addEventListener('click', handleResendCode);
    }
    
    // –ö–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    const backToLoginBtn = document.getElementById('back-to-login');
    if (backToLoginBtn) {
        backToLoginBtn.addEventListener('click', () => showAuthScreen('login-screen'));
    }
    
    const resetBackToLoginBtn = document.getElementById('reset-back-to-login');
    if (resetBackToLoginBtn) {
        resetBackToLoginBtn.addEventListener('click', () => showAuthScreen('login-screen'));
    }
    
    const verifyToLoginBtn = document.getElementById('verify-to-login');
    if (verifyToLoginBtn) {
        verifyToLoginBtn.addEventListener('click', () => showAuthScreen('login-screen'));
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
function initAuthSwitchers() {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const toRegisterBtn = document.getElementById('to-register');
    if (toRegisterBtn) {
        toRegisterBtn.addEventListener('click', (e) => {
            e.preventDefault();
            showAuthScreen('register-screen');
        });
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Ö–æ–¥—É
    const toLoginBtn = document.getElementById('to-login');
    if (toLoginBtn) {
        toLoginBtn.addEventListener('click', (e) => {
            e.preventDefault();
            showAuthScreen('login-screen');
        });
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è
    const toForgotPasswordBtn = document.getElementById('to-forgot-password');
    if (toForgotPasswordBtn) {
        toForgotPasswordBtn.addEventListener('click', (e) => {
            e.preventDefault();
            showAuthScreen('forgot-password-screen');
        });
    }
}


/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞
 */
function initChatInterface() {
    // –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
    const newChatBtn = document.getElementById('new-chat-btn');
    if (newChatBtn) {
        newChatBtn.addEventListener('click', createNewChat);
    }
    
    // –õ–æ–≥–æ—Ç–∏–ø –∫–∞–∫ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    const logo = document.querySelector('.logo');
    if (logo) {
        logo.addEventListener('click', function(e) {
            e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å—Å—ã–ª–∫–∏
            
            // –ö–æ–¥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            const savedThreadId = localStorage.getItem(config.storageThreadKey);
            if (savedThreadId) {
                selectChatThread(savedThreadId);
            } else {
                createNewChat();
            }
        });
    }
    
    // –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageInput = document.getElementById('message-input');
    if (messageInput) {
        messageInput.addEventListener('input', () => {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –ø–æ–ª—è –≤–≤–æ–¥–∞
            messageInput.style.height = 'auto';
            messageInput.style.height = (messageInput.scrollHeight) + 'px';
            messageInput.style.height = Math.min(messageInput.scrollHeight, 150) + 'px';
            
            // –ê–∫—Ç–∏–≤–∞—Ü–∏—è/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
            const sendBtn = document.getElementById('send-btn');
            if (sendBtn) {
                sendBtn.disabled = messageInput.value.trim() === '';
            }
        });
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ Enter
        messageInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                if (messageInput.value.trim()) {
                    const sendBtn = document.getElementById('send-btn');
                    if (sendBtn) {
                        sendBtn.click();
                    }
                }
            }
        });
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const sendBtn = document.getElementById('send-btn');
    if (sendBtn) {
        sendBtn.addEventListener('click', sendMessage);
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    const fileUpload = document.getElementById('file-upload');
    if (fileUpload) {
        fileUpload.addEventListener('change', handleFileUpload);
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    const removeFileBtn = document.getElementById('remove-file-btn');
    if (removeFileBtn) {
        removeFileBtn.addEventListener('click', removeUploadedFile);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const navProfileBtn = document.getElementById('nav-profile');
    if (navProfileBtn) {
        navProfileBtn.addEventListener('click', showProfileModal);
    }
    
    const navAboutBtn = document.getElementById('nav-about');
    if (navAboutBtn) {
        navAboutBtn.addEventListener('click', showAboutModal);
    }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú
 * @returns {string} - –°—Ç—Ä–æ–∫–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
 */
function getCurrentTime() {
    const now = new Date();
    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;
}

// ============================================================
// –§—É–Ω–∫—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞
// ============================================================

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —á–∞—Ç
 */
async function createNewChat() {
    showLoading();
    
    try {
        const response = await apiRequest('/create_thread', 'POST');
        
        if (response.thread_id) {
            const threadId = response.thread_id;
            localStorage.setItem(config.storageThreadKey, threadId);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
            await loadChatThreads();
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
            selectChatThread(threadId);
            
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            const messagesContainer = document.getElementById('messages-container');
            if (messagesContainer) {
                messagesContainer.innerHTML = '';
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            addAssistantMessage('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç LawGPT. –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?');
            
            showNotification('–ù–æ–≤—ã–π —á–∞—Ç —Å–æ–∑–¥–∞–Ω', 'success');
        } else {
            showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞', 'error');
        }
    } catch (error) {
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞: ${error.message}`, 'error');
    } finally {
        hideLoading();
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function loadChatThreads() {
    try {
        const response = await apiRequest('/chat/threads', 'GET');
        
        if (response.threads && Array.isArray(response.threads)) {
            renderChatThreads(response.threads);
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —Ç—Ä–µ–¥–∞, –≤—ã–±–∏—Ä–∞–µ–º –µ–≥–æ
            const savedThreadId = localStorage.getItem(config.storageThreadKey);
            if (savedThreadId) {
                selectChatThread(savedThreadId);
            } else if (response.threads.length > 0) {
                // –ò–Ω–∞—á–µ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
                selectChatThread(response.threads[0].id);
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤:', error);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–æ–≤', 'error');
    }
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
 * @param {Array} threads - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ —á–∞—Ç–æ–≤
 */
function renderChatThreads(threads) {
    const chatList = document.getElementById('chat-list');
    if (!chatList) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    chatList.innerHTML = '';
    
    if (threads.length === 0) {
        const emptyItem = document.createElement('li');
        emptyItem.className = 'chat-item empty';
        emptyItem.textContent = '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤.';
        chatList.appendChild(emptyItem);
        
        // –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω–æ–π
        if (isMobile()) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞ –ø—Ä—è–º–æ –≤ —Å–ø–∏—Å–æ–∫
            const newChatItem = document.createElement('li');
            newChatItem.className = 'chat-item new-chat-item';
            newChatItem.innerHTML = '<i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç';
            newChatItem.addEventListener('click', createNewChat);
            chatList.appendChild(newChatItem);
            
            // –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Ç–∞–∫–∂–µ —Å–¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ —à–∞–ø–∫–µ –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω–æ–π
            const menuToggle = document.getElementById('menu-toggle');
            if (menuToggle) {
                // –î–æ–±–∞–≤–∏–º –∞–Ω–∏–º–∞—Ü–∏—é, —á—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                menuToggle.classList.add('pulse-animation');
                
                // –£–±–µ—Ä–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
                setTimeout(() => {
                    menuToggle.classList.remove('pulse-animation');
                }, 5000);
            }
        }
        
        return;
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    threads.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
    
    threads.forEach(thread => {
        const chatItem = document.createElement('li');
        chatItem.className = 'chat-item';
        chatItem.dataset.threadId = thread.id;
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        const date = new Date(thread.created_at);
        const formattedDate = `${date.toLocaleDateString('ru-RU')} ${date.toLocaleTimeString('ru-RU', {hour: '2-digit', minute:'2-digit'})}`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–∞—Ç–∞
        chatItem.innerHTML = `
            <div class="chat-info">
                <div class="chat-title">${thread.first_message || '–ù–æ–≤—ã–π —á–∞—Ç'}</div>
                <div class="chat-date">${formattedDate}</div>
            </div>
        `;
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        chatItem.addEventListener('click', () => {
            selectChatThread(thread.id);
        });
        
        chatList.appendChild(chatItem);
    });
}

/**
 * –í—ã–±–∏—Ä–∞–µ—Ç —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} threadId - ID —Ç—Ä–µ–¥–∞ —á–∞—Ç–∞
 */
async function selectChatThread(threadId) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç—Ä–µ–¥–∞ –≤ localStorage
    localStorage.setItem(config.storageThreadKey, threadId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI - –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
    const chatItems = document.querySelectorAll('.chat-item');
    chatItems.forEach(item => {
        if (item.dataset.threadId === threadId) {
            item.classList.add('active');
        } else {
            item.classList.remove('active');
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
    const currentChatId = document.getElementById('current-chat-id');
    if (currentChatId) {
        currentChatId.textContent = threadId;
    }
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    const messagesContainer = document.getElementById('messages-container');
    if (messagesContainer) {
        messagesContainer.innerHTML = '';
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    await loadChatMessages(threadId);
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
 * @param {string} threadId - ID —Ç—Ä–µ–¥–∞ —á–∞—Ç–∞
 */
async function loadChatMessages(threadId) {
    try {
        console.log(`–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç—Ä–µ–¥–∞ ${threadId}`);
        const response = await apiRequest(`/messages/${threadId}`, 'GET');
        
        if (response.messages && Array.isArray(response.messages)) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ö, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            const formattedMessages = response.messages.map(message => {
                // –ï—Å–ª–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
                if (!message.created_at) {
                    console.warn(`–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏: ${message.id || '–±–µ–∑ ID'}`);
                    message.created_at = new Date().toISOString();
                }
                
                // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç—Å—è
                try {
                    const testDate = new Date(message.created_at);
                    if (isNaN(testDate.getTime())) {
                        console.warn(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: ${message.created_at}`);
                        message.created_at = new Date().toISOString();
                    }
                } catch (e) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞—Ç—ã: ${e.message}`);
                    message.created_at = new Date().toISOString();
                }
                
                return message;
            });
            
            // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
            renderChatMessages(formattedMessages);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞', 'error');
    }
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
 * @param {Array} messages - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
 */
function renderChatMessages(messages) {
    const messagesContainer = document.getElementById('messages-container');
    if (!messagesContainer) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    messagesContainer.innerHTML = '';
    
    if (messages.length === 0) {
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        addAssistantMessage('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç LawGPT. –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
    messages.forEach(message => {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –≤ –æ–±—ä–µ–∫—Ç Date
        const timestamp = message.created_at ? new Date(message.created_at) : new Date();
        
        if (message.role === 'user') {
            addUserMessage(message.content, timestamp);
        } else if (message.role === 'assistant') {
            addAssistantMessage(message.content, timestamp);
        }
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    scrollToBottom();
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function sendMessage() {
    const messageInput = document.getElementById('message-input');
    const fileUpload = document.getElementById('file-upload');
    
    if (!messageInput || !fileUpload) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç—ã –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    const text = messageInput.value.trim();
    const file = fileUpload.files[0];
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ —Ç–µ–∫—Å—Ç–∞, –Ω–∏ —Ñ–∞–π–ª–∞ - –≤—ã—Ö–æ–¥–∏–º
    if (!text && !file) {
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–¥–∞
    const threadId = localStorage.getItem(config.storageThreadKey);
    if (!threadId) {
        showNotification('–û—à–∏–±–∫–∞: —á–∞—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω', 'error');
        return;
    }
    
    // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userTimestamp = new Date();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç —Å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
    addUserMessage(text, userTimestamp);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    messageInput.value = '';
    messageInput.style.height = 'auto';
    
    const sendBtn = document.getElementById('send-btn');
    if (sendBtn) {
        sendBtn.disabled = true;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    showTypingIndicator();
    
    // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–∞–π–ª–∞
    const formData = new FormData();
    if (text) {
        formData.append('query', text);
    }
    if (file) {
        formData.append('file', file);
        removeUploadedFile(); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏ –∏—Ö –ø–æ–∫–∞–∑–∞
    const processingSteps = [
        { message: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...", delay: 500 },
        { message: "–ü–æ–∏—Å–∫ –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ...", delay: 1000 },
        { message: "–ü–æ–∏—Å–∫ –≤ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ...", delay: 1000 },
        { message: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö...", delay: 3000 },
        { message: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞...", delay: 5000 }
    ];
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
    processingSteps.forEach(step => {
        setTimeout(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—Å—ë –µ—â—ë –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
            const indicator = document.getElementById('typing-indicator-container');
            if (indicator) {
                updateTypingIndicator(step.message);
            }
        }, step.delay);
    });
    
    try {
        console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç—Ä–µ–¥ ${threadId}`);
        
        // –î–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        const response = await apiRequestFormData(`/chat/${threadId}`, formData);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        hideTypingIndicator();
        
        // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        const assistantTimestamp = new Date();
        
        if (response.assistant_response) {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
            addAssistantMessage(response.assistant_response, assistantTimestamp);
            
            // –ï—Å–ª–∏ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
            if (response.recognized_text) {
                const infoMessage = document.createElement('div');
                infoMessage.className = 'message message-system';
                infoMessage.innerHTML = `
                    <div class="message-content">
                        <div class="file-info">
                            <i class="fas fa-file-alt"></i>
                            <span>–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω: ${response.file_name}</span>
                        </div>
                    </div>
                `;
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é —Ç—É –∂–µ –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
                infoMessage.dataset.timestamp = assistantTimestamp.getTime();
                
                document.getElementById('messages-container').appendChild(infoMessage);
            }
        } else {
            showNotification('–û—à–∏–±–∫–∞: –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞', 'error');
        }
    } catch (error) {
        hideTypingIndicator();
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`, 'error');
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    scrollToBottom();
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
 */
function updateTypingIndicator(message) {
    const typingContainer = document.getElementById('typing-indicator-container');
    
    if (!typingContainer) {
        showTypingIndicator();
        setTimeout(() => updateTypingIndicator(message), 100);
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    let statusText = typingContainer.querySelector('.typing-status');
    if (!statusText) {
        statusText = document.createElement('div');
        statusText.className = 'typing-status';
        statusText.style.marginLeft = '10px';
        statusText.style.fontSize = '12px';
        statusText.style.color = 'rgba(255, 255, 255, 0.7)';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å —Ç–æ—á–∫–∞–º–∏
        const indicator = typingContainer.querySelector('.typing-indicator');
        if (indicator) {
            typingContainer.appendChild(statusText);
        } 
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    statusText.textContent = message;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Date} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
function addUserMessage(text, timestamp = null) {
    const messagesContainer = document.getElementById('messages-container');
    if (!messagesContainer) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –ï—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—É—â—É—é
    if (!timestamp) {
        timestamp = new Date();
    }
    
    const template = document.getElementById('message-template');
    // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Ä—É—á–Ω—É—é
    if (!template) {
        const messageElement = document.createElement('div');
        messageElement.className = 'message message-user';
        
        const contentElement = document.createElement('div');
        contentElement.className = 'message-content';
        contentElement.textContent = text;
        
        const timeElement = document.createElement('div');
        timeElement.className = 'message-time';
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        const dateStr = timestamp.toLocaleDateString('ru-RU');
        const timeStr = timestamp.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});
        
        // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã
        const dateSpan = document.createElement('span');
        dateSpan.className = 'message-date';
        dateSpan.textContent = dateStr;
        
        timeElement.appendChild(dateSpan);
        timeElement.appendChild(document.createTextNode(timeStr));
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ data-timestamp
        messageElement.dataset.timestamp = timestamp.getTime();
        
        // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        messageElement.appendChild(contentElement);
        messageElement.appendChild(timeElement);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
        messagesContainer.appendChild(messageElement);
        scrollToBottom();
        return;
    }
    
    // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    const messageElement = template.content.cloneNode(true).querySelector('.message');
    
    messageElement.classList.add('message-user');
    
    const contentElement = messageElement.querySelector('.message-content');
    contentElement.textContent = text;
    
    const timeElement = messageElement.querySelector('.message-time');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
    const dateStr = timestamp.toLocaleDateString('ru-RU');
    const timeStr = timestamp.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –¥–∞—Ç—ã
    const dateSpan = document.createElement('span');
    dateSpan.className = 'message-date';
    dateSpan.textContent = dateStr;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ data-timestamp
    messageElement.dataset.timestamp = timestamp.getTime();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —ç–ª–µ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏
    timeElement.appendChild(dateSpan);
    timeElement.appendChild(document.createTextNode(timeStr));
    
    messagesContainer.appendChild(messageElement);
    scrollToBottom();
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —á–∞—Ç
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Date} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
function addAssistantMessage(text, timestamp = null) {
    const messagesContainer = document.getElementById('messages-container');
    if (!messagesContainer) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –ï—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—É—â—É—é
    if (!timestamp) {
        timestamp = new Date();
    }
    
    const template = document.getElementById('message-template');
    
    // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Ä—É—á–Ω—É—é
    if (!template) {
        const messageElement = document.createElement('div');
        messageElement.className = 'message message-assistant';
        
        const contentElement = document.createElement('div');
        contentElement.className = 'message-content';
        
        // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ Markdown –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
        if (config.markdownEnabled && window.markdown) {
            contentElement.innerHTML = window.markdown.parse(text);
        } else {
            contentElement.textContent = text;
        }
        
        const timeElement = document.createElement('div');
        timeElement.className = 'message-time';
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        const dateStr = timestamp.toLocaleDateString('ru-RU');
        const timeStr = timestamp.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});
        
        // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã
        const dateSpan = document.createElement('span');
        dateSpan.className = 'message-date';
        dateSpan.textContent = dateStr;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ data-timestamp
        messageElement.dataset.timestamp = timestamp.getTime();
        
        timeElement.appendChild(dateSpan);
        timeElement.appendChild(document.createTextNode(timeStr));
        
        // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        messageElement.appendChild(contentElement);
        messageElement.appendChild(timeElement);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
        messagesContainer.appendChild(messageElement);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if (window.MarkdownProcessor) {
            MarkdownProcessor.processMessage(messageElement);
        }
        
        scrollToBottom();
        return;
    }
    
    // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    const messageElement = template.content.cloneNode(true).querySelector('.message');
    
    messageElement.classList.add('message-assistant');
    
    const contentElement = messageElement.querySelector('.message-content');
    
    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ Markdown –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    if (config.markdownEnabled && window.markdown) {
        contentElement.innerHTML = window.markdown.parse(text);
    } else {
        contentElement.textContent = text;
    }
    
    const timeElement = messageElement.querySelector('.message-time');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
    const dateStr = timestamp.toLocaleDateString('ru-RU');
    const timeStr = timestamp.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –¥–∞—Ç—ã
    const dateSpan = document.createElement('span');
    dateSpan.className = 'message-date';
    dateSpan.textContent = dateStr;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ data-timestamp
    messageElement.dataset.timestamp = timestamp.getTime();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —ç–ª–µ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏
    timeElement.appendChild(dateSpan);
    timeElement.appendChild(document.createTextNode(timeStr));
    
    messagesContainer.appendChild(messageElement);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if (window.MarkdownProcessor) {
        MarkdownProcessor.processMessage(messageElement);
    }
    
    scrollToBottom();
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
 */
function showTypingIndicator() {
    const messagesContainer = document.getElementById('messages-container');
    if (!messagesContainer) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    let indicator = document.getElementById('typing-indicator-container');
    
    // –ï—Å–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
    if (indicator) {
        indicator.style.display = 'flex';
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    const container = document.createElement('div');
    container.className = 'message message-assistant';
    container.id = 'typing-indicator-container';
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏
    const typingIndicator = document.createElement('div');
    typingIndicator.className = 'typing-indicator';
    typingIndicator.innerHTML = `
        <div class="typing-dot"></div>
        <div class="typing-dot"></div>
        <div class="typing-dot"></div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.appendChild(typingIndicator);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    messagesContainer.appendChild(container);
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

/**
 * –°–∫—Ä—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
 */
function hideTypingIndicator() {
    const indicator = document.getElementById('typing-indicator-container');
    if (indicator) {
        // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–∑ DOM
        indicator.remove();
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è input file
 */
function handleFileUpload(e) {
    const file = e.target.files[0];
    
    if (!file) {
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if (file.size > config.maxFileSize) {
        showNotification(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç ${config.maxFileSize / (1024 * 1024)} –ú–ë`, 'error');
        e.target.value = '';
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    const allowedTypes = ['.pdf', '.doc', '.docx'];
    const fileType = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
    
    if (!allowedTypes.includes(fileType)) {
        showNotification('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã PDF –∏ Word (.pdf, .doc, .docx)', 'error');
        e.target.value = '';
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞
    const fileNameElement = document.getElementById('file-name');
    if (fileNameElement) {
        fileNameElement.textContent = file.name;
    }
    
    const uploadPreview = document.getElementById('upload-preview');
    if (uploadPreview) {
        uploadPreview.classList.remove('hidden');
    }
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    const sendBtn = document.getElementById('send-btn');
    if (sendBtn) {
        sendBtn.disabled = false;
    }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
 */
function removeUploadedFile() {
    const fileUpload = document.getElementById('file-upload');
    if (fileUpload) {
        fileUpload.value = '';
    }
    
    const uploadPreview = document.getElementById('upload-preview');
    if (uploadPreview) {
        uploadPreview.classList.add('hidden');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const messageInput = document.getElementById('message-input');
    const sendBtn = document.getElementById('send-btn');
    if (messageInput && sendBtn) {
        sendBtn.disabled = messageInput.value.trim() === '';
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function loadUserProfile() {
    try {
        const response = await apiRequest('/profile', 'GET');
        
        if (response) {
            const userName = `${response.first_name} ${response.last_name}`;
            const userNameElement = document.getElementById('user-name');
            if (userNameElement) {
                userNameElement.textContent = userName;
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', error);
    }
}

/**
 * –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
 */
function scrollToBottom() {
    if (!config.autoscrollEnabled) return;
    
    const messagesContainer = document.getElementById('messages-container');
    if (messagesContainer) {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ —ç–∫—Ä–∞–Ω–∞–º–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @param {boolean} showAppScreen - true –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, false –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
function toggleAppVisibility(showAppScreen) {
    const authScreens = document.getElementById('auth-screens');
    const mainApp = document.getElementById('main-app');
    
    if (!authScreens || !mainApp) {
        console.error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏');
        return;
    }
    
    if (showAppScreen) {
        authScreens.style.display = 'none';
        mainApp.style.display = 'flex';
    } else {
        mainApp.style.display = 'none';
        authScreens.style.display = 'flex';
    }
}

// –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    // –ü–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π
    initMobileEnhancements();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initApp();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    initSocialLinks();
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Markdown
    if (config.markdownEnabled && window.marked) {
        window.markdown = marked;
        window.markdown.setOptions({
            breaks: true,
            gfm: true
        });
        
        if (window.hljs) {
            window.markdown.setOptions({
                highlight: function(code, lang) {
                    if (lang && window.hljs.getLanguage(lang)) {
                        return window.hljs.highlight(code, {language: lang}).value;
                    }
                    return window.hljs.highlightAuto(code).value;
                }
            });
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π
    window.addEventListener('resize', () => {
        if (isMobile() && !window.mobileEnhancementsInitialized) {
            initMobileMenu();
            window.mobileEnhancementsInitialized = true;
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Mermaid –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º
    if (window.mermaid) {
        mermaid.initialize({
            startOnLoad: false,
            theme: 'dark',
            securityLevel: 'loose'
        });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Telegram –≤ —Ñ—É—Ç–µ—Ä–µ
    ensureTelegramLink();
    
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏ —Ñ—É—Ç–µ—Ä–∞
    fixFooterStyles();
    
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
});