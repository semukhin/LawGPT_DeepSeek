version: '3.8'

services:
  backend:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lawgpt_deepseek_backend_2
    restart: always
    volumes:
      - ./documents_docx:/app/documents_docx
      - ./documents_html:/app/documents_html
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./logs:/app/logs
      - ./prompts:/app/prompts
      - ./responses:/app/responses
    environment:
      - DB_HOST_MYSQL=194.87.243.188
      - DB_PORT_MYSQL=3306
      - DB_NAME_MYSQL=default_db
      - DB_USER_MYSQL=gen_user
      - DB_PASSWORD_MYSQL=Grisha1977!
      - DB_HOST=82.97.242.92
      - DB_PORT=5432
      - DB_NAME=ruslaw_db
      - DB_USER=gen_user
      - DB_PASSWORD=P?!ri#ag5%G1Si
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ES_HOST=elasticsearch
      - ES_USER=none
      - ES_PASS=none
      - PG_DB_HOST=82.97.242.92
      - PG_DB_PORT=5432
      - PG_DB_NAME=ruslaw_db
      - PG_DB_USER=gen_user
      - PG_DB_PASSWORD=P?!ri#ag5%G1Si
      - AI_PROVIDER=deepseek
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_BASE=${DEEPSEEK_API_BASE}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_STARTTLS=${MAIL_STARTTLS}
      - MAIL_SSL_TLS=${MAIL_SSL_TLS}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - es_network

  elasticsearch:
    image: elasticsearch:8.11.1
    container_name: elasticsearch_2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - es_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s

  nginx:
    platform: linux/amd64
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./documents_html:/usr/share/nginx/documents_html
      - ./frontend:/usr/share/nginx/frontend
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
    restart: always
    networks:
      - es_network

volumes:
  documents_docx:
  documents_html:
  uploads:
  static:
  es_data:

networks:
  es_network:
    driver: bridge